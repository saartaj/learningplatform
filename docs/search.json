{
  "articles": [
    {
      "path": "about.html",
      "title": "QR",
      "author": [],
      "contents": "\r\n\r\n          \r\n          \r\n          \r\n          \r\n           \r\n          Home\r\n          About\r\n          \r\n          \r\n          \r\n          \r\n          R\r\n           \r\n          ▾\r\n          \r\n          \r\n          Basics\r\n          Quick start with R\r\n          Plot\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          \r\n          \r\n          \r\n          ☰\r\n          \r\n          \r\n      \r\n        \r\n          \r\n            \r\n          \r\n            QR\r\n          \r\n          \r\n            \r\n          \r\n          \r\n            This website is here to help you in understanding programming languages and its use for implementing data science, machine learning automation and to understand production using these tools. If you have found my work useful for your assignment completion, reporting in business, buy me a cup of coffee. To find my more work & for suggestions tap below.\r\n          \r\n          \r\n            \r\n                \r\n                  \r\n                    YouTube\r\n                  \r\n                \r\n              \r\n                            \r\n                \r\n                  \r\n                    Vimeo\r\n                  \r\n                \r\n              \r\n                            \r\n                \r\n                  \r\n                    Linkedin\r\n                  \r\n                \r\n              \r\n                            \r\n                \r\n                  \r\n                    Email\r\n                  \r\n                \r\n              \r\n                          \r\n        \r\n      \r\n    \r\n\r\n    \r\n      \r\n        \r\n          \r\n            \r\n          \r\n            QR\r\n          \r\n          \r\n            \r\n          \r\n          \r\n            This website is here to help you in understanding programming languages and its use for implementing data science, machine learning automation and to understand production using these tools. If you have found my work useful for your assignment completion, reporting in business, buy me a cup of coffee. To find my more work & for suggestions tap below.\r\n          \r\n        \r\n      \r\n      \r\n          \r\n              \r\n                                \r\n                    \r\n                    YouTube\r\n                    \r\n                \r\n                                \r\n                    \r\n                    Vimeo\r\n                    \r\n                \r\n                                \r\n                    \r\n                    Linkedin\r\n                    \r\n                \r\n                                \r\n                    \r\n                    Email\r\n                    \r\n                \r\n                              \r\n          \r\n      \r\n    \r\n\r\n    \r\n    \r\n    ",
      "last_modified": "2021-07-12T17:33:33+05:30"
    },
    {
      "path": "base.html",
      "title": "Quick Start With R",
      "author": [],
      "contents": "\r\nWhen I was just a student in university, probably like you’re today, was confused about learning a programming language. Whether I will be able to learn it as a pro or it will provide me an opportunity of work. At the end of University days, R was introduced to us as a tool for data analysis. In this very first attempt, I would like to introduce \\(R-Base\\).\r\nThis package contains the basic functions which let R function as a language: arithmetic, input/output, basic programming support, etc. Its contents are available through inheritance from any environment.\r\nFor a complete list of functions, use library(help = “base”). Everything in R is an object. Data types in R:\r\nBasics of R\r\nR has 6 basic data types. (General types)\r\ncharacter: text written under ’’ or \"\".\r\nnumeric : numbers 0.1,1 or any number than can be expressed using dot.\r\ninteger : completed numbers such as 1,2,3..etc.\r\nlogical : TRUE, FALSE\r\ncomplex : Imaginary numbers using 1i, 2i etc.\r\nDates : Special attention will be given to this.[Later]\r\n\r\n\r\n# character type\r\nchar <- 'character'\r\ntypeof(char);class(char)\r\n\r\n\r\n[1] \"character\"\r\n[1] \"character\"\r\n\r\n# numeric type\r\nnum <- 8.0\r\ntypeof(num);class(num)\r\n\r\n\r\n[1] \"double\"\r\n[1] \"numeric\"\r\n\r\n# integer \r\nint <- 8L\r\ntypeof(int);class(int)\r\n\r\n\r\n[1] \"integer\"\r\n[1] \"integer\"\r\n\r\n# logical\r\nLogical <- TRUE\r\ntypeof(Logical);class(Logical)\r\n\r\n\r\n[1] \"logical\"\r\n[1] \"logical\"\r\n\r\n# complex number or imaginery number\r\nimaginery <- 8 + 4i\r\ntypeof(imaginery);class(imaginery)\r\n\r\n\r\n[1] \"complex\"\r\n[1] \"complex\"\r\n\r\nR creates and works with 6 data structures:\r\nAtomic\r\nVector\r\nMatrix\r\nData Frame/tibble {modern for fast data manipulation, machine friendly}\r\nFactors\r\nList\r\nAtomic:\r\nany single data type (length of 1) in R is an atomic object. For e.g.\r\n\r\n\r\nx <- 'a'\r\nx <- 1\r\nx <- TRUE\r\nx <- 2+1i\r\n\r\n\r\n\r\nVector:\r\ncollection of same data types in an object.For e.g.\r\n\r\n\r\nx <- c(1,2,3)\r\nx <- c('a','b','c')\r\nx <- c(TRUE,FALSE,F,T)  # F = FALSE, T = TRUE\r\nx <- c(1+1i,1-1i)\r\nx <- c(1L,2L,3L)\r\n\r\n\r\n\r\nMatrix\r\ncolumn bind of same length numeric, integer or complex vectors are called matrix. For e.g.\r\n\r\n\r\na <- 1:5\r\nb <- 6:10\r\nc <- 11:15\r\nd <- 16:20\r\ne <- 21:25\r\n\r\nmtx <- cbind(a,b,c,d,e)\r\nmtx\r\n\r\n\r\n     a  b  c  d  e\r\n[1,] 1  6 11 16 21\r\n[2,] 2  7 12 17 22\r\n[3,] 3  8 13 18 23\r\n[4,] 4  9 14 19 24\r\n[5,] 5 10 15 20 25\r\n\r\nclass(mtx)\r\n\r\n\r\n[1] \"matrix\" \"array\" \r\n\r\n# Or we can create using matrix function\r\n\r\nmtx <- matrix(1:25, 5, 5, byrow = F)\r\nmtx\r\n\r\n\r\n     [,1] [,2] [,3] [,4] [,5]\r\n[1,]    1    6   11   16   21\r\n[2,]    2    7   12   17   22\r\n[3,]    3    8   13   18   23\r\n[4,]    4    9   14   19   24\r\n[5,]    5   10   15   20   25\r\n\r\n\r\nNOTE: Matrix can only use numeric or integer types, This is why we have data frame in R.\r\n\r\nData Frame\r\nIt is a kind of matrix except it can handle every kind of vector inside it. This is makes it more appealing to use in manipulation.\r\n\r\n\r\nA <- c('a', 'b', 'c', 'd')\r\nB <- c(1L,2L,3L,4L)\r\nC <- seq(1,2,length.out = 4)\r\n\r\ndf <- data.frame(A, B,C)\r\ndf\r\n\r\n\r\n  A B        C\r\n1 a 1 1.000000\r\n2 b 2 1.333333\r\n3 c 3 1.666667\r\n4 d 4 2.000000\r\n\r\nclass(df)\r\n\r\n\r\n[1] \"data.frame\"\r\n\r\n# Note tibble is fast and tidyverse friendly. Which you will learn later.\r\ndf <- tibble::tibble(\r\n  date = seq.Date(from = as.Date('2021-07-01'),to = as.Date('2021-07-10'), by = 1),\r\n  number = 1:10,\r\n  character = c('a','b','c','d','e','a','b','c','d','e') \r\n)\r\ndf\r\n\r\n\r\n# A tibble: 10 x 3\r\n   date       number character\r\n   <date>      <int> <chr>    \r\n 1 2021-07-01      1 a        \r\n 2 2021-07-02      2 b        \r\n 3 2021-07-03      3 c        \r\n 4 2021-07-04      4 d        \r\n 5 2021-07-05      5 e        \r\n 6 2021-07-06      6 a        \r\n 7 2021-07-07      7 b        \r\n 8 2021-07-08      8 c        \r\n 9 2021-07-09      9 d        \r\n10 2021-07-10     10 e        \r\n\r\nclass(df)\r\n\r\n\r\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\r\n\r\nR operators\r\n‘=’ and ‘<-’{left} or ‘->’{right} are both used to assign values to object.\r\nSince R is mathematical friendly language one can use R as a calculator as well, for scientific as well.\r\n[‘+’, ‘-’, ’*‘,’/‘, ’log’, ‘exp’ etc.]\r\nMathematical operators\r\n[‘>’, ‘<’, ‘!’, ‘>=’, ‘<=’,‘==’] > Note: ‘==’ is not ‘=’, latter is used to assign values in R. And ‘!’ can be used in any line where we have to tell are e.g. not equal to or not true.\r\nmatrix operators are:\r\n[‘%%’, ‘%/%’,‘^’, ’%*%’]\r\n%%: Use to find remainder\r\n\r\n\r\n46%%5\r\n\r\n\r\n[1] 1\r\n\r\n%/%: Use to find quotient\r\n\r\n\r\n46%/%4\r\n\r\n\r\n[1] 11\r\n\r\n^: Power of a value\r\n\r\n\r\n4^3\r\n\r\n\r\n[1] 64\r\n\r\n%*%: Matrix Multiplication\r\n\r\n\r\na <- matrix(1:9,3,3)\r\nb <- matrix(c(1,2,3),3,1)\r\n\r\na%*%b\r\n\r\n\r\n     [,1]\r\n[1,]   30\r\n[2,]   36\r\n[3,]   42\r\n\r\nBasic Statistics\r\n\r\n\r\n# Central tendancy parameter\r\nx <- rnorm(200) + 125\r\n\r\nmean(x)\r\n\r\n\r\n[1] 124.9156\r\n\r\nmedian(x)\r\n\r\n\r\n[1] 124.9513\r\n\r\n# Variability parameters\r\nvar(x)\r\n\r\n\r\n[1] 0.8431818\r\n\r\nsd(x)\r\n\r\n\r\n[1] 0.9182493\r\n\r\nshapiro.test(x)\r\n\r\n\r\n\r\n    Shapiro-Wilk normality test\r\n\r\ndata:  x\r\nW = 0.99658, p-value = 0.9389\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-12T17:33:36+05:30"
    },
    {
      "path": "index.html",
      "title": "Sartaj H. A.",
      "description": "*Data Scientist Enthusiast, Ex-IBMer, Post Graduate in Economics from Dept. of Economics, Jamia Millia Islamia University. I have deep knowledge of Data solving methodology(supervised, un-supervised & semi-superwised) and working on messy data sets. I deal in Statistical learning problem, cross sectional data, time series, text & Image data . Deep Learning and Text Analytics is one of the fascinating domain where I like working on or learning about.*\n",
      "author": [],
      "contents": "\r\nComplete Projects\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-12T17:33:36+05:30"
    },
    {
      "path": "plot.html",
      "title": "Basics of Plots in R",
      "author": [],
      "contents": "\r\nPlot\r\n\r\n\r\nx <- 1:20 \r\ny <- x*0.8 + rnorm(20)\r\nplot(x, y)\r\n\r\n\r\n\r\n\r\nLabel for plot\r\nWe do labeling in R base using xlab and ylab function.Example is a given below, here we have given names as follows: ‘X-axis’ and ‘Y-axis’\r\n\r\n\r\nx <- 1:20 \r\ny <- x*0.8 + rnorm(20)\r\nplot(x, y, xlab = 'X-axis', ylab = 'Y-axis')\r\n\r\n\r\n\r\n\r\nTitle And Subtitle in plots\r\nWe use main and sub function for giving title in the plot at the same time we can caption the graph using caption function in R. As given below.\r\n\r\n\r\nx <- 1:20 \r\ny <- x*0.8 + rnorm(20)\r\nplot(x, y, xlab = 'X-axis', ylab = 'Y-axis', main = 'Title', sub = 'Sub-Title')\r\n\r\n\r\n\r\n\r\nShape, Size and Color for coordinates\r\nShape of the coordinates are managed by pch arguments in R as shown below. cex argument takes care of the size of coordinates type, you can change value to have fun. Similarly col function provide color to the pch types. On the same, One can get help from R using either ?pch or help(pch).\r\n\r\n\r\nx <- 1:20 \r\ny <- x*0.8 + rnorm(20)\r\nplot(x, y, xlab = 'X-axis', ylab = 'Y-axis', main = 'Title', sub = 'Sub-Title', pch = 2, cex = 1.5, col = 'green')\r\n\r\n\r\n\r\n\r\nType Of Plot\r\nType argument is plot function provide different kind of plotting options. Which are as follows:\r\nwhat type of plot should be drawn. Possible types are\r\n“p” for points,\r\n“l” for lines,\r\n“b” for both,\r\n“c” for the lines part alone of “b”,\r\n“o” for both ‘overplotted’,\r\n“h” for ‘histogram’ like (or ‘high-density’) vertical lines,\r\n“s” for stair steps,\r\n“S” for other steps, see ‘Details’ below,\r\n“n” for no plotting.\r\n\r\n\r\nx <- 1:20 \r\ny <- x*0.8 + rnorm(20)\r\nplot(x, y, xlab = 'X-axis', ylab = 'Y-axis',\r\n     main = 'Title', sub = 'Sub-Title', \r\n     pch = 2, cex = 1.5, col = 'green',\r\n     type = 'o')\r\n\r\n\r\n\r\n\r\n\r\nNOTE: Plot is function is a generic function in R, where you can plot any possible graph using it. Though packages are available for high level plotting. But one must have knowledge of plot function because many machine learning plot can be done using it.\r\n\r\nThe End\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-12T17:33:38+05:30"
    }
  ],
  "collections": []
}
